import { decompose, disassemble, useJamo } from "../src/decompose";

describe('decompose.ts test', () => {

    test('useJamo()', () => {
        const [push, clear, getJamo] = useJamo();
        push('ㄱ');
        push('ㅏ');
        expect(getJamo()).toStrictEqual(['\u3131', '\u314f']);
        push('ㅁ');
        expect(getJamo()).toStrictEqual(['\u3131', '\u314f', '\u3141']);
        clear();
        expect(getJamo()).toStrictEqual([]);
    });

    test('disassemble()', () => {
        expect(disassemble(0xd796)).toStrictEqual(['\u314e', '\u3163', '\u313f'])
        expect(disassemble(0xb5ab)).toStrictEqual(['\u3138', '\u3153', '\u313c'])
    });

    test('decompose()', () => {
        const str = "테스트용 코드 작성ㅎㅏ는 것? 오히려 좋아";

        expect(decompose(str.normalize('NFC'))).toStrictEqual([
            ['ㅌ', 'ㅔ'], ['ㅅ', 'ㅡ'],
            ['ㅌ', 'ㅡ'], ['ㅇ', 'ㅛ', 'ㅇ'],
            [' '], ['ㅋ', 'ㅗ'],
            ['ㄷ', 'ㅡ'], [' '],
            ['ㅈ', 'ㅏ', 'ㄱ'], ['ㅅ', 'ㅓ', 'ㅇ'],
            ['ㅎ'], ['ㅏ'],
            ['ㄴ', 'ㅡ', 'ㄴ'], [' '],
            ['ㄱ', 'ㅓ', 'ㅅ'], ['?'],
            [' '], ['ㅇ', 'ㅗ'],
            ['ㅎ', 'ㅣ'], ['ㄹ', 'ㅕ'],
            [' '], ['ㅈ', 'ㅗ', 'ㅎ'],
            ['ㅇ', 'ㅏ']
        ]);

        expect(decompose(str.normalize('NFD'))).toStrictEqual([
            ['ㅌ', 'ㅔ'], ['ㅅ', 'ㅡ'],
            ['ㅌ', 'ㅡ'], ['ㅇ', 'ㅛ', 'ㅇ'],
            [' '], ['ㅋ', 'ㅗ'],
            ['ㄷ', 'ㅡ'], [' '],
            ['ㅈ', 'ㅏ', 'ㄱ'], ['ㅅ', 'ㅓ', 'ㅇ'],
            ['ㅎ'], ['ㅏ'],
            ['ㄴ', 'ㅡ', 'ㄴ'], [' '],
            ['ㄱ', 'ㅓ', 'ㅅ'], ['?'],
            [' '], ['ㅇ', 'ㅗ'],
            ['ㅎ', 'ㅣ'], ['ㄹ', 'ㅕ'],
            [' '], ['ㅈ', 'ㅗ', 'ㅎ'],
            ['ㅇ', 'ㅏ']
        ]);

        expect(decompose(str.normalize('NFKC'))).toStrictEqual([
            ['ㅌ', 'ㅔ'], ['ㅅ', 'ㅡ'],
            ['ㅌ', 'ㅡ'], ['ㅇ', 'ㅛ', 'ㅇ'],
            [' '], ['ㅋ', 'ㅗ'],
            ['ㄷ', 'ㅡ'], [' '],
            ['ㅈ', 'ㅏ', 'ㄱ'], ['ㅅ', 'ㅓ', 'ㅇ'],
            ['ㅎ', 'ㅏ'], ['ㄴ', 'ㅡ', 'ㄴ'],
            [' '], ['ㄱ', 'ㅓ', 'ㅅ'],
            ['?'], [' '],
            ['ㅇ', 'ㅗ'], ['ㅎ', 'ㅣ'],
            ['ㄹ', 'ㅕ'], [' '],
            ['ㅈ', 'ㅗ', 'ㅎ'], ['ㅇ', 'ㅏ']
        ]);

        expect(decompose(str.normalize('NFKD'))).toStrictEqual([
            ['ㅌ', 'ㅔ'], ['ㅅ', 'ㅡ'],
            ['ㅌ', 'ㅡ'], ['ㅇ', 'ㅛ', 'ㅇ'],
            [' '], ['ㅋ', 'ㅗ'],
            ['ㄷ', 'ㅡ'], [' '],
            ['ㅈ', 'ㅏ', 'ㄱ'], ['ㅅ', 'ㅓ', 'ㅇ'],
            ['ㅎ', 'ㅏ'], ['ㄴ', 'ㅡ', 'ㄴ'],
            [' '], ['ㄱ', 'ㅓ', 'ㅅ'],
            ['?'], [' '],
            ['ㅇ', 'ㅗ'], ['ㅎ', 'ㅣ'],
            ['ㄹ', 'ㅕ'], [' '],
            ['ㅈ', 'ㅗ', 'ㅎ'], ['ㅇ', 'ㅏ']
        ]);
    })
})